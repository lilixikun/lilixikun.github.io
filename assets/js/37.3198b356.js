(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{385:function(t,e,r){"use strict";r.r(e);var a=r(25),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"redux-实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-实现原理"}},[t._v("#")]),t._v(" Redux | 实现原理")]),t._v(" "),r("h2",{attrs:{id:"redux-介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-介绍"}},[t._v("#")]),t._v(" Redux 介绍")]),t._v(" "),r("p",[t._v("Redux是一个用来管理管理数据状态和UI状态的JavaScript应用工具。随着JavaScript单页应用（SPA）开发日趋复杂,JavaScript需要管理比任何时候都要多的state（状态）,Redux就是用来降低管理难度的. Redux 不依赖于任何框架,但是它可以适用于任何框架")]),t._v(" "),r("h2",{attrs:{id:"三大原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三大原则"}},[t._v("#")]),t._v(" 三大原则")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("单一数据源")])])]),t._v(" "),r("p",[t._v("整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中。")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("State 是只读的")])])]),t._v(" "),r("p",[t._v("唯一改变 state 的方法就是触发 action，action 是一个用于描述已发生事件的普通对象。")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("使用纯函数来执行修改")])])]),t._v(" "),r("p",[t._v("为了描述 action 如何改变 state tree ，你需要编写 reducers。")]),t._v(" "),r("h2",{attrs:{id:"redux-store-的基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-store-的基础"}},[t._v("#")]),t._v(" Redux Store 的基础")]),t._v(" "),r("p",[t._v("store 是一个单一对象")]),t._v(" "),r("ul",[r("li",[t._v("管理应用的state")]),t._v(" "),r("li",[t._v("通过 store.getState() 可以获取 state")]),t._v(" "),r("li",[t._v("通过 store.dispatch(action) 来触发 state 更新")]),t._v(" "),r("li",[t._v("通过 store.subscribe(listener) 来注册 state 变化监听器")]),t._v(" "),r("li",[t._v("通过 createStore(reducer, [initialState]) 创建")])]),t._v(" "),r("h2",{attrs:{id:"对应的函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对应的函数式编程"}},[t._v("#")]),t._v(" 对应的函数式编程")]),t._v(" "),r("ol",[r("li",[t._v("store -> container")]),t._v(" "),r("li",[t._v("currentState -> __value")]),t._v(" "),r("li",[t._v("action -> f")]),t._v(" "),r("li",[t._v("currentReducer -> map")]),t._v(" "),r("li",[t._v("middleware -> IO functor (解决异步操作的各种问题)")])]),t._v(" "),r("h2",{attrs:{id:"手写一个-redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#手写一个-redux"}},[t._v("#")]),t._v(" 手写一个 Redux")]),t._v(" "),r("p",[t._v("源码地址请移步 "),r("a",{attrs:{href:"https://github.com/LiLixikun/Blog-example/tree/master/packages/my-redux",target:"_blank",rel:"noopener noreferrer"}},[t._v("手写Redux"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);